<?xml version="1.0"?>
<configuration>
  <!--
    If you plan on running YARN, you must set this property to the value of yarn.
  -->
    <property>
        <name>mapreduce.framework.name</name>
        <value>yarn-tez</value>
    </property>

  <!--
    The staging dir used while submitting jobs.
  -->
    <property>
        <name>yarn.app.mapreduce.am.staging-dir</name>
        <value>/tmp/hadoop-yarn/staging</value>
    </property>

  <!--
    The maximum size of user-logs of each task in KB.
    0 disables the cap.
  -->
    <property>
        <name>mapreduce.task.userlog.limit.kb</name>
        <value>512</value>
    </property>

  <!--
    The maximum size of the MRAppMaster attempt container logs in KB.
    0 disables the cap.
  -->
    <property>
        <name>yarn.app.mapreduce.am.container.log.limit.kb</name>
        <value>512</value>
    </property>

  <!--
    Number of backup files for the ApplicationMaster logs when using
    ContainerRollingLogAppender (CRLA).
    See org.apache.log4j.RollingFileAppender.maxBackupIndex. By default,
    ContainerLogAppender (CLA) is used, and container logs are not rolled.
    CRLA is enabled for the ApplicationMaster when both
    mapreduce.task.userlog.limit.kb and
    yarn.app.mapreduce.am.container.log.backups are greater than zero.
  -->
    <property>
        <name>yarn.app.mapreduce.am.container.log.backups</name>
        <value>4</value>
    </property>
  <!--
    Number of backup files for task logs when using ContainerRollingLogAppender (CRLA).
    See org.apache.log4j.RollingFileAppender.maxBackupIndex. By default,
    ContainerLogAppender (CLA) is used, and container logs are not rolled.
    CRLA is enabled for tasks when both mapreduce.task.userlog.limit.kb and
    yarn.app.mapreduce.task.container.log.backups are greater than zero.
  -->
    <property>
        <name>yarn.app.mapreduce.task.container.log.backups</name>
        <value>4</value>
    </property>

    <property>
        <name>mapreduce.jobhistory.keytab</name>
        <value>/var/keytabs/mapred.keytab</value>
    </property> 
    <property>
	<name>mapreduce.jobhistory.address</name>
	<value>localhost:10020</value>
	<description>Default port is 10020.</description>
    </property>     
    <property>
         <name>mapreduce.jobhistory.principal</name>
         <value>mapred/_HOST@EXAMPLE.COM</value>
    </property> 
     
    <property>
         <name>mapreduce.jobhistory.webapp.address</name>
         <value>localhost:19888</value>
    </property> 
     
    <property>
         <name>mapreduce.jobhistory.webapp.https.address</name>
         <value>localhost:19889</value>
    </property> 

    <property>
      <name>yarn.resourcemanager.principal</name>
      <value>yarn/_HOST@EXAMPLE.COM</value>
    </property>
     
    <property>
         <name>mapreduce.jobhistory.webapp.spnego-keytab-file</name>
         <value>/var/keytabs/mapred.keytab</value>
    </property> 
    <!-- Error: Could not find or load main class org.apache.hadoop.mapreduce.v2.app.MRAppMaster --> 
    <property>
         <name>mapreduce.jobhistory.webapp.spnego-principal</name>
         <value>mapred/_HOST@EXAMPLE.COM</value>
    </property>  

    <property>
        <name>mapreduce.jobtracker.kerberos.principal</name>
        <value>mapred/_HOST@EXAMPLE.COM</value>
    </property>
    <property>
        <name>mapreduce.jobtracker.keytab.file</name>
        <value>/var/keytabs/mapred.keytab</value>
    </property>

    <property>
        <name>mapreduce.job.emit-timeline-data</name>
        <value>true</value>
    </property>

    <property>
        <name>yarn.app.mapreduce.am.env</name>
        <value>HADOOP_MAPRED_HOME=${HADOOP_HOME}</value>
        <description>
	User added environment variables for the MR App Master
        processes. Example :
        1) A=foo  This will set the env variable A to foo
        2) B=$B:c This is inherit tasktracker's B env variable.
	To define environment variables individually, you can specify
	multiple properties of the form yarn.app.mapreduce.am.env.VARNAME,
	where VARNAME is the name of the environment variable. This is the only
	way to add a variable when its value contains commas.
        </description>
    </property>
    <property>
        <name>mapreduce.map.env</name>
        <value>HADOOP_MAPRED_HOME=${HADOOP_HOME}</value>
	<description>
	User added environment variables for the map task processes,
	specified as a comma separated list.
	Example:
	VAR1=value1,VAR2=value2
	To define environment variables individually, you can specify
 	multiple properties of the form mapreduce.map.env.VARNAME,
	where VARNAME is the name of the environment variable. This is the only
	way to add a variable when its value contains commas.
	</description>
    </property>
    <property>
        <name>mapreduce.reduce.env</name>
        <value>HADOOP_MAPRED_HOME=${HADOOP_HOME}</value>
  	<description>
	 To define environment variables individually, you can specify
	 multiple properties of the form mapreduce.reduce.env.VARNAME,
	 where VARNAME is the name of the environment variable. This is the only
	 way to add a variable when its value contains commas.
	 contains commas.
  	</description>
    </property>

</configuration>
